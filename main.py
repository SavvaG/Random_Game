import numpy as np


def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1, 101, size=(1000))
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return (score)


def game_core_v6(number):
    """Основная идея алгоритма это начать угадывать с 50, и потом угадывать среднее значение внутри интервала
    возможных чисел. То есть, угадываем 50, так как это середина между 1 и 100, если меньше, то угадываем 25,
    так как это середина между 1 и 50 и так далее пока не угадаем нужное число, такой алгоритм демонстрирует хорошие
    результаты

    """
    max_value=101 # изначальный максимум
    min_value=0 # изначальный минимум
    predict=50 # угадываем первый раз
    count=1 # count является счетчиком, и первый раз 1, так как изначально мы пытаемся угадать 50
    while number !=predict: # входим в цикл, пока не угадаем число


        if predict<number:  # на случай если угадываемое число больше предикта
            min_value=predict # поскольку мы знаем, что число больше значит наш предикт новое максимальное значение
            predict=predict+(max_value-min_value)//2 # чтобы наш новый прдикт был в центре интервала возможных чисел


        if predict > number: # на случай если угадываемое число больше предикта
            max_value = predict # в данном случае мы знаем, что число меньше предикта, значит у нас новый интервал
            predict = predict - (predict-min_value)//2 # чтобы наш новый прдикт был в центре интервала возможных чисел

        count+=1 # счетчик внутри цикла


    """ Пример, как работает код, мы пробуем угадать число 50, поскольку это центр интервала от 0 до 100
    если число больше, то мы сразу сокращаем интервал поиска в два раза, то есть теперь мы ищем от 50 до 100,
    и пытаемся угадать 75, если в этот разчисло больше, то мы сокращаем интервал еще в два раза и ищем от 75 до 100,
    и угадываем 88 и так, пока не угадаем загаданное число"""
    return count


score_game(game_core_v6)


